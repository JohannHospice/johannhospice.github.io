//-various
mixin item(value, name)
	li(class={'uk-active': (current.path[0] == "index" && value == "/") || current.path[0] == value.substr(1)})
		+a(value)=name

mixin list(values, names)
	each value, i in values
		+item(value, names[i])

mixin tooltip(tooltip, title)
	div(title=title uk-tooltip=tooltip)
		block
//-label
mixin label(type, value)
	.uk-label(class="uk-label-"+type)=value

mixin card-badge(type, value)
	+label(type, value).uk-card-badge

mixin icon(icon, ratio)
	span(uk-icon="icon:"+icon+";ratio:"+(ratio?ratio:1))

//-link

mixin icon-button(href, target, icon, ratio)
	+a(href, target)(class="uk-icon-button" uk-icon="icon:"+icon+";ratio:"+(ratio?ratio:1))&attributes(attributes)=name
	
mixin icon-link(href, target, icon, ratio)
	+a(href, target)(class="uk-icon-link" uk-icon="icon:"+icon+";ratio:"+(ratio?ratio:1))&attributes(attributes)=name

mixin a(href, target, name)
	a(href=href target=(target?target:"_self"))&attributes(attributes)=name
		block

mixin link-reset(href, target)
	+a(href, target)(class="uk-link-reset")
		block

mixin button(text, style, size, href, target)
	a.uk-button(class="uk-button-"+style+" uk-button-"+size, href=href, target=target)=text
	
//-text
mixin header(title, subtitle, description)
	h1.uk-h6.uk-text-uppercase=title
	h2.uk-h1.uk-margin-remove-top=subtitle
	p.uk-margin-small-top!=description

//-grid
mixin dynamic-grid(size, lcolumn, mcolumn, scolumn, column)
	div(class="uk-child-width-1-"+column+" uk-child-width-1-"+scolumn+"@s uk-child-width-1-"+mcolumn+"@m uk-child-width-1-"+lcolumn+"@l" uk-grid uk-margin)
		-var i = 0
		-var column = lcolumn
		-var line = Math.ceil(size/column)
		-var jlimit = Math.ceil(size / column - 1)+1
		-var j = 0
		while  i < column
			div(uk-margin)
				-j = 0
				while j + i * line < size && j < jlimit
					div
						block
					-j++
			-i++

mixin dynamic-grid-with-array(length, mcolumn, bcolumn)
	-var column = mcolumn
	-var line = Math.ceil(length / column)
	-var jlimit = Math.ceil(length / column - 1)+1
	-var i = 0
	div(class="uk-child-width-1-"+bcolumn+" uk-child-width-1-"+mcolumn+"@m" uk-grid uk-margin)
		while i < column
			.uk-grid-collapse(uk-margin)
				-var j = 0
				while j + i * line < length && j < jlimit
					div
						block
					-j++
			-i++

//-Cards
mixin card(type)
	.uk-card.uk-card-hover(class=(type?"uk-card-" + type:"uk-card-default"))&attributes(attributes)=name
		block

mixin card-content-date(dateBegin, dateEnd)
	span.uk-text-meta
		time(datetime)=dateBegin
		|  - 
		time(datetime)=dateEnd

mixin card-content-footer(sub, dateBegin, dateEnd)
	p.uk-text-uppercase.uk-text-small.uk-margin-small
		span=sub
		br
		+card-content-date(dateBegin, dateEnd)

mixin card-content-main(title, subtitle, description, label)
	if label
		div.uk-card-badge.uk-label(class="uk-label-"+label.type)= label.value
	h3.uk-margin-remove=title
	if subtitle
		h4.uk-margin-remove.uk-text-uppercase.uk-text-meta=subtitle
	p.uk-margin-bottom.uk-margin-small-top!=description

mixin card-education(diplome)
	+link-reset(diplome.link.href, "_bank")
		+card(diplome.primary?"primary":"default").uk-card-body.uk-height-1-1
			.uk-flex.uk-flex-column.uk-flex-between.uk-height-1-1
				div
					+card-content-main(diplome.title, diplome.mention, diplome.description, diplome.label)
				div
					+card-content-footer(diplome.place, diplome.dateBegin, diplome.dateEnd)
					small.uk-text-bold.uk-text-uppercase.uk-text-primary=diplome.link.title
						span(uk-icon="icon: link")

mixin card-experience(experience)
	+link-reset("/about/"+experience.name)
		+card().uk-card-body
			div
				+card-content-main(experience.title, experience.mention, experience.description, experience.label)
			div
				+card-content-footer(experience.place, experience.dateBegin, experience.dateEnd)

mixin card-work(work)
	+link-reset("/works/"+work.name)
		.uk-card.uk-card-default.uk-card-hover.uk-height-large
			.uk-card-body.uk-flex.uk-flex-column.uk-flex-between.uk-height-1-1
				div
					+card-content-main(work.title, null, work.description, work.label)
				div
					+card-content-footer(work.category, work.dateStartFormated, work.dateEndFormated, work.dateBegin, work.dateEnd)
			//
				.uk-background-blend-screen.uk-background-primary.uk-background-cover(style="background-image: url(/assets/works/"+work.name+".jpg);")
			//
				.uk-card.uk-card-default
					.uk-inline.uk-height-large
						img.uk-height-1-1.uk-width-1-1(src="/assets/works/"+work.name+".jpg" alt="_home")
						.uk-overlay-default.uk-position-cover
						.uk-overlay.uk-position-top
							+card-content-main(work.title, null, work.description, work.label)
						.uk-overlay.uk-position-bottom
							+card-content-footer(work.category, work.dateStartFormated, work.dateEndFormated, work.dateBegin, work.dateEnd)
			//
				.uk-card-media-left.uk-cover-container
					img(src="/assets/works/"+work.name+".jpg" alt="_home" uk-cover)
					canvas(width="" height="")
			//
				.uk-visible-toggle
				
				.uk-card-media-top
					.uk-height-large.uk-overflow-hidden
						.uk-hidden-hover
							img.uk-width-1-1(src="/assets/_home.gif" alt="_home")
						img.uk-width-1-1(src="/assets/works/"+work.name+".jpg" alt=work.name)